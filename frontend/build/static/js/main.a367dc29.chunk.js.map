{"version":3,"sources":["components/AddTask/AddTask.jsx","components/ShowTasks/ShowTasks.jsx","App.js","reportWebVitals.js","index.js"],"names":["onSubmit","inp","document","getElementById","axios","post","serverurl","mssg","value","then","res","window","location","reload","catch","err","console","log","enterkey","e","which","AddTask","className","type","id","onKeyPress","onClick","ShowTasks","useState","tasks","setTasks","process","checkedbox","url","put","chk","computedmessage","str","length","i","useEffect","get","data","map","tsk","class","task","done","checked","onChange","delete","deleteit","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8QAIA,SAASA,IACP,IAAIC,EAAMC,SAASC,eAAe,eAMlCC,IACGC,KAHOC,sDAGG,CAAEC,KAAMN,EAAIO,QACtBC,MAAK,SAACC,GAELC,OAAOC,SAASC,SAChBZ,EAAIO,MAAQ,MAEbM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAGhC,SAASG,EAASC,GAEA,KAAZA,EAAEC,OAAcpB,IAePqB,MAZf,WACE,OACE,sBAAKC,UAAU,WAAf,UACE,0CACA,sBAAKA,UAAU,aAAf,UACE,uBAAOC,KAAK,OAAOC,GAAG,cAAcC,WAAYP,IAChD,wBAAQQ,QAAS1B,EAAjB,6B,cCqDO2B,MAjFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMxB,EAAYyB,8CAWlB,SAASC,EAAWxB,EAAOgB,GACzBhB,GAASA,EAET,IAAMyB,EAAM3B,EAAS,gBAAYkB,GACjCpB,IACG8B,IAAID,EAAK,CAAEE,IAAK3B,IAChBC,MAAK,SAACC,GAELC,OAAOC,SAASC,YAEjBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAchC,SAASqB,EAAgBC,GACvB,IAAI3B,EAAM,GACV,GAAI2B,EAAIC,QAAU,GAAI,OAAOD,EAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,GAAIA,IAAK7B,GAAO2B,EAAIE,GAExC,OADA7B,GAAO,MAIT,OA1CA8B,qBAAU,WACRxB,QAAQC,IAAIc,uMACZf,QAAQC,IAAIX,GACZF,IACGqC,IAAInC,EAAY,UAChBG,MAAK,SAACC,GAAD,OAASoB,EAASpB,EAAIgC,SAC3B5B,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAC7B,CAACT,IAoCF,sBAAKgB,UAAU,aAAf,UACE,uCAICO,EAAMc,KAAI,SAACC,GAAD,OACT,sBAAKtB,UAAU,WAAwBE,GAAIoB,EAAIpB,GAA/C,UACE,+BACE,sBAAKqB,MAAM,UAAX,UACGT,EAAgBQ,EAAIE,MACrB,sBAAMD,MAAM,cAAZ,SAA2BD,EAAIE,UAKrB,OAEbF,EAAIG,KACH,uBACExB,KAAK,WACLyB,SAAO,EACPC,SAAU,kBAAMjB,GAAW,EAAMY,EAAIpB,OAGvC,uBAAOD,KAAK,WAAW0B,SAAU,kBAAMjB,GAAW,EAAOY,EAAIpB,OAE/D,wBAAQE,QAAS,kBA/CzB,SAAkBF,GAChB,IAAMS,EAAM3B,EAAS,kBAAckB,GACnCpB,IACG8C,OAAOjB,GACPxB,MAAK,SAACC,GAELC,OAAOC,SAASC,YAEjBC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAuCDoC,CAASP,EAAIpB,KAApC,sBApB6BoB,EAAIpB,WCvC5B4B,MAdf,WACE,OACE,sBAAK9B,UAAU,MAAf,UACE,qBAAKA,UAAY,cACjB,sBAAKA,UAAY,YAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAGF,qBAAKA,UAAY,kBCDR+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7D,SAASC,eAAe,SAM1BkD,M","file":"static/js/main.a367dc29.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./addtask.css\";\r\n\r\nfunction onSubmit() {\r\n  var inp = document.getElementById(\"taskMessage\");\r\n  // console.log(inp.value);\r\n  const serverurl = process.env.REACT_APP_SERVER_URL;\r\n\r\n  var url = serverurl + \"/adddata\";\r\n\r\n  axios\r\n    .post(url, { mssg: inp.value })\r\n    .then((res) => {\r\n      // console.log('Data added');\r\n      window.location.reload();\r\n      inp.value = \"\";\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nfunction enterkey(e) {\r\n  // console.log(e.which);\r\n  if (e.which === 13) onSubmit();\r\n}\r\n\r\nfunction AddTask() {\r\n  return (\r\n    <div className=\"add-task\">\r\n      <h1>Add Task</h1>\r\n      <div className=\"input-area\">\r\n        <input type=\"text\" id=\"taskMessage\" onKeyPress={enterkey} />\r\n        <button onClick={onSubmit}>Add Task</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTask;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./showtasks.css\";\r\n\r\nfunction ShowTasks() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const serverurl = process.env.REACT_APP_SERVER_URL;\r\n\r\n  useEffect(() => {\r\n    console.log(process.env);\r\n    console.log(serverurl);\r\n    axios\r\n      .get(serverurl + \"/tasks\")\r\n      .then((res) => setTasks(res.data))\r\n      .catch((err) => console.log(err));\r\n  }, [serverurl]);\r\n\r\n  function checkedbox(value, id) {\r\n    value = !value;\r\n\r\n    const url = serverurl + `/done/${id}`;\r\n    axios\r\n      .put(url, { chk: value })\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function deleteit(id) {\r\n    const url = serverurl + `/remove/${id}`;\r\n    axios\r\n      .delete(url)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function computedmessage(str) {\r\n    var res = \"\";\r\n    if (str.length <= 35) return str;\r\n\r\n    for (var i = 0; i < 32; i++) res += str[i];\r\n    res += \"...\";\r\n    return res;\r\n  }\r\n\r\n  return (\r\n    <div className=\"show-tasks\">\r\n      <h1>\r\n        Tasks\r\n        {/* {console.log(serverurl)} */}\r\n      </h1>\r\n      {tasks.map((tsk) => (\r\n        <div className=\"task-box\" key={tsk.id} id={tsk.id}>\r\n          <h3>\r\n            <div class=\"tooltip\">\r\n              {computedmessage(tsk.task)}\r\n              <span class=\"tooltiptext\">{tsk.task}</span>\r\n            </div>\r\n            {/*\r\n                    computedmessage(tsk.task)\r\n                    // tsk.task + `${tsk.task.length}`\r\n                    */}{\" \"}\r\n          </h3>\r\n          {tsk.done ? (\r\n            <input\r\n              type=\"checkbox\"\r\n              checked\r\n              onChange={() => checkedbox(true, tsk.id)}\r\n            />\r\n          ) : (\r\n            <input type=\"checkbox\" onChange={() => checkedbox(false, tsk.id)} />\r\n          )}\r\n          <button onClick={() => deleteit(tsk.id)}>Delete</button>\r\n        </div>\r\n      ))}\r\n      {/* {console.log(tasks)} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowTasks;\r\n","import './App.css';\nimport AddTask from './components/AddTask/AddTask';\nimport ShowTasks from './components/ShowTasks/ShowTasks';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className = \"side-area\"></div>\n      <div className = \"main-area\">\n        <AddTask/>\n        <ShowTasks/>\n        \n      </div>\n      <div className = \"side-area\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}